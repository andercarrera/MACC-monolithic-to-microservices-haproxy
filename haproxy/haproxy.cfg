global
  log /dev/log local0
  log localhost local1 notice
  maxconn 2000
  daemon
  tune.ssl.default-dh-param 2048

defaults
  log     global
  mode    http
  option  httplog
  option  dontlognull
  retries 3
  timeout connect 5000
  timeout client  50000
  timeout server  50000

frontend api_gateway
  bind *:80
  bind *:${HAPROXY_PORT} ssl crt /usr/local/etc/haproxy/haproxy.pem
  http-request redirect scheme https unless { ssl_fc }

  acl PATH_client path_beg -i beg /client
  acl PATH_delivery path_beg -i beg /delivery

  acl PATH_machine1 path_beg -i beg /machine1
  acl PATH_machine2 path_beg -i beg /machine2
  acl PATH_machine3 path_beg -i beg /machine3
  acl PATH_machine4 path_beg -i beg /machine4

  acl PATH_order path_beg -i beg /order
  acl PATH_payment path_beg -i beg /payment
  acl PATH_logs path_beg -i beg /logs
  acl PATH_warehouse path_beg -i beg /warehouse

  use_backend be_client if PATH_client
  use_backend be_delivery if PATH_delivery

  use_backend be_machine1 if PATH_machine1
  use_backend be_machine2 if PATH_machine2
  use_backend be_machine3 if PATH_machine3
  use_backend be_machine4 if PATH_machine4

  use_backend be_order if PATH_order
  use_backend be_payment if PATH_payment
  use_backend be_logs if PATH_logs
  use_backend be_warehouse if PATH_warehouse

backend be_client
  balance roundrobin
  option httpchk HEAD /health HTTP/1.0
  #server client1 ${CLIENT_IP}:${GUNICORN_PORT} check inter 5s downinter 1s fall 2 rise 3 fastinter 500
  server-template clientapp 1 _client._tcp.service.consul resolvers consul resolve-opts allow-dup-ip resolve-prefer ipv4 check ssl verify none

backend be_delivery
  balance roundrobin
  option httpchk HEAD /health HTTP/1.0
  #server delivery1 ${DELIVERY_IP}:${GUNICORN_PORT} check inter 5s downinter 1s fall 2 rise 3 fastinter 500
  server-template deliveryapp 1 _delivery._tcp.service.consul resolvers consul resolve-opts allow-dup-ip resolve-prefer ipv4 check ssl verify none


backend be_machine1
  balance roundrobin
  option httpchk HEAD /health HTTP/1.0
  #server machine1 ${MACHINE_1_IP}:${GUNICORN_PORT} check inter 5s downinter 1s fall 2 rise 3 fastinter 500
  server-template machine1 1 _machine1._tcp.service.consul resolvers consul resolve-opts allow-dup-ip resolve-prefer ipv4 check ssl verify none

backend be_machine2
  balance roundrobin
  option httpchk HEAD /health HTTP/1.0
  server-template machine2 1 _machine2._tcp.service.consul resolvers consul resolve-opts allow-dup-ip resolve-prefer ipv4 check ssl verify none

backend be_machine3
  balance roundrobin
  option httpchk HEAD /health HTTP/1.0
  server-template machine3 1 _machine3._tcp.service.consul resolvers consul resolve-opts allow-dup-ip resolve-prefer ipv4 check ssl verify none

backend be_machine4
  balance roundrobin
  option httpchk HEAD /health HTTP/1.0
  server-template machine4 1 _machine4._tcp.service.consul resolvers consul resolve-opts allow-dup-ip resolve-prefer ipv4 check ssl verify none


backend be_order
  balance roundrobin
  option httpchk HEAD /health HTTP/1.0
  #server order1 ${ORDER_IP}:${GUNICORN_PORT} check inter 5s downinter 1s fall 2 rise 3 fastinter 500
  server-template orderapp 1 _order._tcp.service.consul resolvers consul resolve-opts allow-dup-ip resolve-prefer ipv4 check ssl verify none


backend be_payment
  balance roundrobin
  option httpchk HEAD /health HTTP/1.0
  #server payment1 ${PAYMENT_IP}:${GUNICORN_PORT} check inter 5s downinter 1s fall 2 rise 3 fastinter 500
  server-template paymentapp 1 _payment._tcp.service.consul resolvers consul resolve-opts allow-dup-ip resolve-prefer ipv4 check ssl verify none


backend be_logs
  balance roundrobin
  option httpchk HEAD /health HTTP/1.0
  #server logs1 ${LOGS_IP}:${GUNICORN_PORT} check inter 5s downinter 1s fall 2 rise 3 fastinter 500
  server-template logsapp 1 _logs._tcp.service.consul resolvers consul resolve-opts allow-dup-ip resolve-prefer ipv4 check ssl verify none

backend be_warehouse
  balance roundrobin
  option httpchk HEAD /health HTTP/1.0
  #server warehouse1 ${WAREHOUSE_IP}:${GUNICORN_PORT} check inter 5s downinter 1s fall 2 rise 3 fastinter 500
  server-template warehouseapp 1 _warehouse._tcp.service.consul resolvers consul resolve-opts allow-dup-ip resolve-prefer ipv4 check ssl verify none

resolvers consul
  nameserver consul ${FLASK_IP}:8600
  accepted_payload_size 8192
  hold valid 5s

listen stats
  bind :${HAPROXY_STATS_PORT} ssl crt /usr/local/etc/haproxy/haproxy.pem
  stats enable
  stats uri /
  stats hide-version
  stats auth admin:admin

# https://www.haproxy.com/blog/using-haproxy-as-an-api-gateway-part-1/
# https://www.haproxy.com/blog/using-haproxy-as-an-api-gateway-part-2-authentication/
# https://www.haproxy.com/blog/using-haproxy-as-an-api-gateway-part-3-health-checks/
